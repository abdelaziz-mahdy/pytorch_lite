// Autogenerated from Pigeon (v11.0.1), do not edit directly.
// See also: https://pub.dev/packages/pigeon

#import <Foundation/Foundation.h>

@protocol FlutterBinaryMessenger;
@protocol FlutterMessageCodec;
@class FlutterError;
@class FlutterStandardTypedData;

NS_ASSUME_NONNULL_BEGIN

@class PyTorchRect;
@class ResultObjectDetection;

@interface PyTorchRect : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithLeft:(NSNumber *)left
    top:(NSNumber *)top
    right:(NSNumber *)right
    bottom:(NSNumber *)bottom
    width:(NSNumber *)width
    height:(NSNumber *)height;
@property(nonatomic, strong) NSNumber * left;
@property(nonatomic, strong) NSNumber * top;
@property(nonatomic, strong) NSNumber * right;
@property(nonatomic, strong) NSNumber * bottom;
@property(nonatomic, strong) NSNumber * width;
@property(nonatomic, strong) NSNumber * height;
@end

@interface ResultObjectDetection : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithClassIndex:(NSNumber *)classIndex
    className:(nullable NSString *)className
    score:(NSNumber *)score
    rect:(PyTorchRect *)rect;
@property(nonatomic, strong) NSNumber * classIndex;
@property(nonatomic, copy, nullable) NSString * className;
@property(nonatomic, strong) NSNumber * score;
@property(nonatomic, strong) PyTorchRect * rect;
@end

/// The codec used by ModelApi.
NSObject<FlutterMessageCodec> *ModelApiGetCodec(void);

@protocol ModelApi
- (void)loadModelModelPath:(NSString *)modelPath numberOfClasses:(nullable NSNumber *)numberOfClasses imageWidth:(nullable NSNumber *)imageWidth imageHeight:(nullable NSNumber *)imageHeight objectDetectionModelType:(nullable NSNumber *)objectDetectionModelType completion:(void (^)(NSNumber *_Nullable, FlutterError *_Nullable))completion;
///predicts abstract number input
- (void)getPredictionCustomIndex:(NSNumber *)index input:(NSArray<NSNumber *> *)input shape:(NSArray<NSNumber *> *)shape dtype:(NSString *)dtype completion:(void (^)(NSArray *_Nullable, FlutterError *_Nullable))completion;
///predicts raw image but returns the raw net output
- (void)getRawImagePredictionListIndex:(NSNumber *)index imageData:(FlutterStandardTypedData *)imageData isTupleOutput:(NSNumber *)isTupleOutput tupleIndex:(NSNumber *)tupleIndex completion:(void (^)(NSArray<NSNumber *> *_Nullable, FlutterError *_Nullable))completion;
///predicts raw image but returns the raw net output
- (void)getRawImagePredictionListObjectDetectionIndex:(NSNumber *)index imageData:(FlutterStandardTypedData *)imageData minimumScore:(NSNumber *)minimumScore IOUThreshold:(NSNumber *)IOUThreshold boxesLimit:(NSNumber *)boxesLimit isTupleOutput:(NSNumber *)isTupleOutput tupleIndex:(NSNumber *)tupleIndex completion:(void (^)(NSArray<ResultObjectDetection *> *_Nullable, FlutterError *_Nullable))completion;
///predicts image but returns the raw net output
- (void)getImagePredictionListIndex:(NSNumber *)index imageData:(nullable FlutterStandardTypedData *)imageData imageBytesList:(nullable NSArray<FlutterStandardTypedData *> *)imageBytesList imageWidthForBytesList:(nullable NSNumber *)imageWidthForBytesList imageHeightForBytesList:(nullable NSNumber *)imageHeightForBytesList mean:(NSArray<NSNumber *> *)mean std:(NSArray<NSNumber *> *)std isTupleOutput:(NSNumber *)isTupleOutput tupleIndex:(NSNumber *)tupleIndex completion:(void (^)(NSArray<NSNumber *> *_Nullable, FlutterError *_Nullable))completion;
///predicts image but returns the output detections
- (void)getImagePredictionListObjectDetectionIndex:(NSNumber *)index imageData:(nullable FlutterStandardTypedData *)imageData imageBytesList:(nullable NSArray<FlutterStandardTypedData *> *)imageBytesList imageWidthForBytesList:(nullable NSNumber *)imageWidthForBytesList imageHeightForBytesList:(nullable NSNumber *)imageHeightForBytesList minimumScore:(NSNumber *)minimumScore IOUThreshold:(NSNumber *)IOUThreshold boxesLimit:(NSNumber *)boxesLimit isTupleOutput:(NSNumber *)isTupleOutput tupleIndex:(NSNumber *)tupleIndex completion:(void (^)(NSArray<ResultObjectDetection *> *_Nullable, FlutterError *_Nullable))completion;
@end

extern void ModelApiSetup(id<FlutterBinaryMessenger> binaryMessenger, NSObject<ModelApi> *_Nullable api);

NS_ASSUME_NONNULL_END
