// Autogenerated from Pigeon (v17.3.0), do not edit directly.
// See also: https://pub.dev/packages/pigeon

#import <Foundation/Foundation.h>

@protocol FlutterBinaryMessenger;
@protocol FlutterMessageCodec;
@class FlutterError;
@class FlutterStandardTypedData;

NS_ASSUME_NONNULL_BEGIN

@class PyTorchRect;
@class ResultObjectDetection;

@interface PyTorchRect : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithLeft:(double )left
    top:(double )top
    right:(double )right
    bottom:(double )bottom
    width:(double )width
    height:(double )height;
@property(nonatomic, assign) double  left;
@property(nonatomic, assign) double  top;
@property(nonatomic, assign) double  right;
@property(nonatomic, assign) double  bottom;
@property(nonatomic, assign) double  width;
@property(nonatomic, assign) double  height;
@end

@interface ResultObjectDetection : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithClassIndex:(NSInteger )classIndex
    className:(nullable NSString *)className
    score:(double )score
    rect:(PyTorchRect *)rect;
@property(nonatomic, assign) NSInteger  classIndex;
@property(nonatomic, copy, nullable) NSString * className;
@property(nonatomic, assign) double  score;
@property(nonatomic, strong) PyTorchRect * rect;
@end

/// The codec used by ModelApi.
NSObject<FlutterMessageCodec> *ModelApiGetCodec(void);

@protocol ModelApi
- (void)loadModelModelPath:(NSString *)modelPath numberOfClasses:(nullable NSNumber *)numberOfClasses imageWidth:(nullable NSNumber *)imageWidth imageHeight:(nullable NSNumber *)imageHeight objectDetectionModelType:(nullable NSNumber *)objectDetectionModelType completion:(void (^)(NSNumber *_Nullable, FlutterError *_Nullable))completion;
///predicts abstract number input
- (void)getPredictionCustomIndex:(NSInteger)index input:(NSArray<double> *)input shape:(NSArray<NSInteger> *)shape dtype:(NSString *)dtype completion:(void (^)(NSArray *_Nullable, FlutterError *_Nullable))completion;
///predicts raw image but returns the raw net output
- (void)getRawImagePredictionListIndex:(NSInteger)index imageData:(FlutterStandardTypedData *)imageData completion:(void (^)(NSArray<double> *_Nullable, FlutterError *_Nullable))completion;
///predicts raw image but returns the raw net output
- (void)getRawImagePredictionListObjectDetectionIndex:(NSInteger)index imageData:(FlutterStandardTypedData *)imageData minimumScore:(double)minimumScore IOUThreshold:(double)IOUThreshold boxesLimit:(NSInteger)boxesLimit completion:(void (^)(NSArray<ResultObjectDetection *> *_Nullable, FlutterError *_Nullable))completion;
///predicts image but returns the raw net output
- (void)getImagePredictionListIndex:(NSInteger)index imageData:(nullable FlutterStandardTypedData *)imageData imageBytesList:(nullable NSArray<FlutterStandardTypedData *> *)imageBytesList imageWidthForBytesList:(nullable NSNumber *)imageWidthForBytesList imageHeightForBytesList:(nullable NSNumber *)imageHeightForBytesList mean:(NSArray<double> *)mean std:(NSArray<double> *)std completion:(void (^)(NSArray<double> *_Nullable, FlutterError *_Nullable))completion;
///predicts image but returns the output detections
- (void)getImagePredictionListObjectDetectionIndex:(NSInteger)index imageData:(nullable FlutterStandardTypedData *)imageData imageBytesList:(nullable NSArray<FlutterStandardTypedData *> *)imageBytesList imageWidthForBytesList:(nullable NSNumber *)imageWidthForBytesList imageHeightForBytesList:(nullable NSNumber *)imageHeightForBytesList minimumScore:(double)minimumScore IOUThreshold:(double)IOUThreshold boxesLimit:(NSInteger)boxesLimit completion:(void (^)(NSArray<ResultObjectDetection *> *_Nullable, FlutterError *_Nullable))completion;
@end

extern void SetUpModelApi(id<FlutterBinaryMessenger> binaryMessenger, NSObject<ModelApi> *_Nullable api);

NS_ASSUME_NONNULL_END
